#!/usr/bin/env python
import sys
import subprocess
from subprocess import PIPE

import logging
import numpy as np
from caffe2.python import workspace, model_helper

LOGGER = logging.getLogger(__name__)
logging.basicConfig(stream=sys.stdout, level=logging.DEBUG)

def main():
    check_caffe2()

def check_caffe2():
    try:
        process = subprocess.Popen(["bash", "-c", "nvidia-smi"], stdout=PIPE)
        process.communicate()
        ret_val = process.wait()
        is_gpu = not ret_val

        if is_gpu:
            # Create random tensor of three dimensions
            x_array = np.random.rand(4, 3, 2)
            workspace.FeedBlob("my_x_array", x_array)

            assert workspace.FetchBlob("my_x_array").any(), "Error: GPU sanity test for Caffe2 failed."

        else:
            # Create random tensor of three dimensions
            x_array = np.random.rand(4, 3, 2)
            workspace.FeedBlob("my_x_array", x_array)

            assert workspace.FetchBlob("my_x_array").any(), "Error: CPU sanity test for Caffe2 failed."

    except Exception as excp:
        LOGGER.debug("Error: check_caffe2 test failed.")
        LOGGER.debug("Exception: {}".format(excp))
        raise

if __name__ == "__main__":
    try:
        sys.exit(main())
    except KeyboardInterrupt:
        pass
