#!/usr/bin/env python
import sys
import subprocess
from subprocess import PIPE

import logging
import numpy
import theano
import theano.tensor as T
from theano import pp


LOGGER = logging.getLogger(__name__)
logging.basicConfig(stream=sys.stdout, level=logging.DEBUG)

def main():
    check_theano()

def check_theano():
    try:
        process = subprocess.Popen(["bash", "-c", "nvidia-smi"], stdout=PIPE)
        process.communicate()
        ret_val = process.wait()
        is_gpu = not ret_val

        if is_gpu:
            # Calculate gradient across arrays
            x_array = T.dscalar('x_array')
            y_array = x_array ** 2
            g_y = T.grad(y_array, x_array)

            assert pp(g_y), "Error: GPU sanity test for Theano failed."
        else:
            # Calculate gradient across arrays
            x_array = T.dscalar('x_array')
            y_array = x_array ** 2
            g_y = T.grad(y_array, x_array)

            assert pp(g_y), "Error: CPU sanity test for Theano failed."

    except Exception as excp:
        LOGGER.debug("Error: check_theano test failed.")
        LOGGER.debug("Exception: {}".format(excp))
        raise

if __name__ == "__main__":
    try:
        sys.exit(main())
    except KeyboardInterrupt:
        pass
